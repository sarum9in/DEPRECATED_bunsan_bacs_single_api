package bacs.api.pb.settings;

import "resource.proto";

message TestGroupSettings
{
    required ResourceLimits resource_limits = 1;
    required Run run = 2;
    repeated File files = 3;
    required Execution execution = 4;
}

message Run
{
    enum Order
    {
        NUMERIC = 0;
        LEXICOGRAPHICAL = 1;
    }
    enum Algorithm
    {
        ALL = 0;
        WHILE_NOT_FAIL = 1;
    }
    required Order order = 2;
    required Algorithm algorithm = 3;
}

message Execution
{
    message Redirection
    {
        enum Stream
        {
            STDIN = 0;
            STDOUT = 1;
            STDERR = 2;
        }
        required Stream stream = 3;
        required string file_id = 2;
    }
    repeated string arguments = 1;
    optional Path current_path = 2;
    repeated Redirection redirections = 3;
}

/// Filesystem path.
message Path
{
    /// If specified, path is absolute, otherwise -- relative.
    optional string root = 1;
    /// Path elements, will be concatenated using OS-specific delimiter.
    repeated string elements = 2;
}

message File
{
    enum Permissions
    {
        READ = 0;
        WRITE = 1;
        EXECUTE = 2;
    }

    /*!
     * \note: It may be more convenient to declare Offset class.
     * Range is looped, i.e. {begin = 5, end = 2}
     * for file of length 7 "0123456" will return "5601".
     */
    message Range
    {
        /// Offset: positive from the beginning, negative from the end (inclusive).
        optional int64 begin = 1;
        /// Offset: positive from the beginning, negative from the end (exclusive).
        optional int64 end = 2;
    }
    required string id = 1;
    repeated Permissions permissions = 2;
    optional /*DataId*/string init = 3;
    optional Path path = 4;
    optional Range receive = 5;
}
